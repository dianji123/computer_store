<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hzh.computer_store.mapper.UserMapper">
    <!--namespace用于指定当前的映射文件和哪个接口进行映射,指定接口的完整文件路径-->
    <!--ResultMap标签自定义映射规则
        id属性:这个映射规则分配一个唯一的id值,SQL语句通过 resultMap="id属性值" 使用这个映射规则
        type属性:取值是一个类,表示SQL语句的查询结果与java中哪个实体类进行结果集的映射
     -->
    <resultMap id="UserEntityMap" type="com.hzh.computer_store.entity.User">
        <!--自定义映射规则，字段名称一致的也可以映射
            在定义映射规则时无论主键名称是否一致都不能省
            column 数据库字段名
            property 类的属性名
            -->
        <id column="uid" property="uid" />
        <result column="is_delete" property="isDelete" />
        <result column="created_user" property="createdUser" />
        <result column="created_time" property="createdTime" />
        <result column="modified_user" property="modifiedUser" />
        <result column="modified_time" property="modifiedTime" />
    </resultMap>

    <!--id 映射接口方法名-->
    <!--useGeneratedKeys="true" 开启字段的值递增(通常是主键递增)
        keyProperty="uid" uid表字段递增
        -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into t_user(username,`password`,salt,phone,email,gender,avatar,is_delete,
                           created_user,created_time,modified_user,modified_time) values (
                     #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
                 )
    </insert>


    <!--select查询的结果:一个对象或多个对象
        resultType:指定对应映射类的类型,要求完整的包结构,要求表的字段的名和类的属性名一致
        resultMap:当表的字段和类的对象属性名不一致时,使用自定义查询结果集的映射规则
        通过<resultmap>标签的id来使用自定义规则
    -->

    <!--查找用户名-->
    <select id="findByUsername" resultMap="UserEntityMap">
        select * from t_user where username=#{username}
    </select>

    <!--uid查找用户-->
    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>

    <!--修改密码-->
    <update id="updatePasswordByUid">
        update t_user set `password`=#{password},modified_user=#{modifiedUser},modified_time=#{modifiedTime} where uid=#{uid}
    </update>

    <!--修改个人信息-->
    <update id="updateInfoByUid">
        update t_user set
                            <!-- test为true则执行if标签内部的语句,逗号要在标签内 -->
                            <if test="phone!=null">phone = #{phone},</if>
                            <if test="email!=null">email = #{email},</if>
                            <if test="gender!=null">gender = #{gender},</if>
                            modified_user = #{modifiedUser},
                            modified_time = #{modifiedTime}
        where uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        update t_user set
                          avatar = #{avatar},
                          modified_user = #{modifiedUser},
                          modified_time = #{modifiedTime}
        where uid=#{uid}
    </update>


</mapper>
